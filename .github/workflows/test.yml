name: Testing

on:
  workflow_dispatch:

jobs:  
  Create_Staging_Release_PR:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: staging

      - name: checkingggbefore
        run: |
          echo "-------"
          pwd
          ls -a
          echo "-------"

      - name: Reset promotion branch
        run: |
          git fetch origin dev:dev
          git reset --hard dev

      - name: checkingggafter
        run: |
          echo "-------"
          pwd
          ls -a
          echo "-------"

      - name: Read Manifest File
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./manifest
      - name: Echo Manifest File
        run: echo "${{ steps.package.outputs.content }}"
      - name: lsssss
        run: ls -a
      - name: Split Manifest File
        run: |
          chmod +x ./.github/script.sh
          ./.github/script.sh "${{ steps.package.outputs.content }}"


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: production-promotion
          base: staging

      # - name: Create commits
      #   run: |
      #     git config user.name 'TorahitoYamashita'
      #     git config user.email 'ho.moko.niki@gmail.com'
      #     git checkout -b testing-branch
      #     date +%s > report.txt
      #     git add -A
      #     git commit -m "Add untracked file during workflow"

      # - name: pull-request
      #   uses: repo-sync/pull-request@v2
      #   with:
      #     # source_branch: "dev"
      #     destination_branch: "staging"
      #     github_token: ${{ secrets.GITHUB_TOKEN }}







      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: Dump steps context
        id: stepssss
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"          



name: start_release_process

on: workflow_dispatch

jobs:
  staging_promotion:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: staging

      - name: reset_promotion_branch
        run: |
          git fetch origin dev:dev
          git reset --hard dev

      - name: read_manifest_file
        id: manifest
        uses: juliangruber/read-file-action@v1
        with:
          path: ./manifest

      - name: update_manifest_file
        run: |
          chmod +x ./.github/script.sh
          ./.github/script.sh "${{ steps.manifest.outputs.content }}"

      - name: read_updated_manifest_file
        id: updated_manifest
        uses: juliangruber/read-file-action@v1
        with:
          path: ./manifest

      - name: prepare_branch_name_and_pr_title
        id: vars
        run: |
          export BRANCH_NAME BRANCH_NAME="rel/${{ steps.updated_manifest.outputs.content }}"
          export PR_TITLE PR_TITLE="chore: release ${{ steps.updated_manifest.outputs.content }}"
          echo ::set-output name=branch_name::${BRANCH_NAME}
          echo ::set-output name=pr_title::${PR_TITLE}

      - name: bump_version_and_add_change_log
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          npm i -g standard-version
          standard-version
          # git push --follow-tags origin staging
          
      - name: create_pull_request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          title: ${{ steps.vars.outputs.pr_title }}
          body: ${{ steps.vars.outputs.pr_title }}
          branch: ${{ steps.vars.outputs.branch_name }}
          delete-branch: true
          base: staging
          labels: automerge
          team-reviewers: owners 
          assignees: ${{ github.actor }}
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>

      - name: slack_notification
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "message": "Starting bills-service ${{ steps.updated_manifest.outputs.content }} release process! \nDev to Staging PR has been created ${{ steps.cpr.outputs.pull-request-url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      # for debugging
      - name: logging_gitHub_context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: logging_event_context
        env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$EVENT_CONTEXT"

      - name: logging_job_context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: logging_steps_context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: logging_runner_context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"


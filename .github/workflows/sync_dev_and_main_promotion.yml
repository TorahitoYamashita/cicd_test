name: sync_dev_and_main_promotion

on: status

jobs:
  sync_dev_and_main_promotion:
    runs-on: ubuntu-latest
    
    if: >-
      github.event.state == 'success' &&
      contains(github.event.target_url, 'staging')
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: sync_staging_to_dev
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git fetch origin staging:staging
          git merge staging
          git push

      - name: read_manifest_file
        id: manifest
        uses: juliangruber/read-file-action@v1
        with:
          path: ./manifest

      - name: push_tag
        run: |
          git tag v${{ steps.manifest.outputs.content }}
          git push --tags

      - name: prepare_pr_title
        id: vars
        run: |
          export PR_TITLE PR_TITLE="chore: release ${{ steps.manifest.outputs.content }}"
          echo ::set-output name=pr_title::${PR_TITLE}

      - name: slack_notification_sync_staging_to_dev
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "message": "Synced Staging into Dev, please pull latest Dev to have up-to-date code"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: create_pr_from_staging_to_main
        id: cpr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "staging"
          destination_branch: "main"
          pr_title: ${{ steps.vars.outputs.pr_title }}
          pr_body: ${{ steps.vars.outputs.pr_title }}
          pr_assignee: ${{ github.actor }}
          pr_reviewer: owners
          github_token: ${{ secrets.GITHUB_TOKEN }}          

      - name: slack_notification_create_pr_from_staging_to_main
        uses: slackapi/slack-github-action@v1.19.0
        with:
          payload: |
            {
              "message": "Staging to Main PR has been created ${{ steps.cpr.outputs.pr_url }}, please review and merge"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # for debugging
      - name: logging_gitHub_context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: logging_event_context
        env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$EVENT_CONTEXT"

      - name: logging_job_context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"

      - name: logging_steps_context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"

      - name: logging_runner_context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"